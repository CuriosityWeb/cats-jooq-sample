/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.enums.UsersGender
import generated.jooq.tables.Users

import java.lang.String
import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class UsersRecord extends UpdatableRecordImpl[UsersRecord](Users.USERS) with Record6[String, String, UsersGender, LocalDate, String, String] {

  /**
   * Setter for <code>USERS.FIRST_NAME</code>.
   */
  def setFirstName(value: String): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>USERS.FIRST_NAME</code>.
   */
  def getFirstName: String = get(0).asInstanceOf[String]

  /**
   * Setter for <code>USERS.LAST_NAME</code>.
   */
  def setLastName(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>USERS.LAST_NAME</code>.
   */
  def getLastName: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>USERS.GENDER</code>.
   */
  def setGender(value: UsersGender): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>USERS.GENDER</code>.
   */
  def getGender: UsersGender = get(2).asInstanceOf[UsersGender]

  /**
   * Setter for <code>USERS.DOB</code>.
   */
  def setDob(value: LocalDate): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>USERS.DOB</code>.
   */
  def getDob: LocalDate = get(3).asInstanceOf[LocalDate]

  /**
   * Setter for <code>USERS.EMAIL</code>.
   */
  def setEmail(value: String): Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>USERS.EMAIL</code>.
   */
  def getEmail: String = get(4).asInstanceOf[String]

  /**
   * Setter for <code>USERS.MOBILE</code>.
   */
  def setMobile(value: String): Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>USERS.MOBILE</code>.
   */
  def getMobile: String = get(5).asInstanceOf[String]

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override def key: Record1[String] = super.key.asInstanceOf[ Record1[String] ]

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow: Row6[String, String, UsersGender, LocalDate, String, String] = super.fieldsRow.asInstanceOf[ Row6[String, String, UsersGender, LocalDate, String, String] ]

  override def valuesRow: Row6[String, String, UsersGender, LocalDate, String, String] = super.valuesRow.asInstanceOf[ Row6[String, String, UsersGender, LocalDate, String, String] ]
  override def field1: Field[String] = Users.USERS.FIRST_NAME
  override def field2: Field[String] = Users.USERS.LAST_NAME
  override def field3: Field[UsersGender] = Users.USERS.GENDER
  override def field4: Field[LocalDate] = Users.USERS.DOB
  override def field5: Field[String] = Users.USERS.EMAIL
  override def field6: Field[String] = Users.USERS.MOBILE
  override def component1: String = getFirstName
  override def component2: String = getLastName
  override def component3: UsersGender = getGender
  override def component4: LocalDate = getDob
  override def component5: String = getEmail
  override def component6: String = getMobile
  override def value1: String = getFirstName
  override def value2: String = getLastName
  override def value3: UsersGender = getGender
  override def value4: LocalDate = getDob
  override def value5: String = getEmail
  override def value6: String = getMobile

  override def value1(value: String): UsersRecord = {
    setFirstName(value)
    this
  }

  override def value2(value: String): UsersRecord = {
    setLastName(value)
    this
  }

  override def value3(value: UsersGender): UsersRecord = {
    setGender(value)
    this
  }

  override def value4(value: LocalDate): UsersRecord = {
    setDob(value)
    this
  }

  override def value5(value: String): UsersRecord = {
    setEmail(value)
    this
  }

  override def value6(value: String): UsersRecord = {
    setMobile(value)
    this
  }

  override def values(value1 : String, value2 : String, value3 : UsersGender, value4 : LocalDate, value5 : String, value6 : String): UsersRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this
  }

  /**
   * Create a detached, initialised UsersRecord
   */
  def this(firstName : String, lastName : String, gender : UsersGender, dob : LocalDate, email : String, mobile : String) = {
    this()

    this.setFirstName(firstName)
    this.setLastName(lastName)
    this.setGender(gender)
    this.setDob(dob)
    this.setEmail(email)
    this.setMobile(mobile)
    resetChangedOnNotNull()
  }
}
